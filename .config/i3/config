# github.com/pahasara

# BASIC CONFIG {{{
set $wallpaper ~/Wallpapers/9.jpg
set $term alacritty
set $mod Mod1

# Font for window titles.
font pango: JetBrains Bold 10

# STARTUP APPLICATIONS

# Set Wallpaper with feh
exec_always feh --bg-fill $wallpaper

# Display Resolution
exec_always xrandr --output eDP1 --mode 1920x1080 --rate 60.00 --brightness 1 --gamma 1 --scale 1

# Turn off system beep
exec_always xset b off

# Screensaver & locker with xidlehook
exec_always --no-startup-id xidlehook \
--detect-sleep \
--not-when-audio \
--not-when-fullscreen \
--timer 300 'xset dpms force standby' '' \
--timer 300 '/home/shinzo/Scripts/lock' '' \
--timer 300 'systemctl suspend' ''

#exec_always xset s on
#exec_always xset s 5 5 &
# Signal after 5 minutes / 300 seconds of inactivity
#exec_always xss-lock di/home/shinzo/Scripts/lock &
#exec_always xss-lock -n /home/shinzo/Scripts/dimscreen.sh -- /home/shinzo/Scripts/lock -n 

#Transperency with picom compositor
exec_always --no-startup-id picom -b

# Start Spotify on startup
#exec_always --no-startup-id spotify
#}}}

#{{{ KEY BINDINGS

# set TERMINAL key
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+q kill

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# Shortcut for ScreenLock
bindsym $mod+x exec ~/Scripts/lock

# Brightness Control
bindsym XF86MonBrightnessUp exec --no-startup-id brillo -A 0.5
bindsym XF86MonBrightnessDown exec --no-startup-id brillo -U 0.5

# Volume/Sound Control
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle 
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle 

# start Rofi/dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id rofi -show drun

# Screenshots
bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/$(date '+%Y%m%d_%H%M%S').png"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/$(date)"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/$(date)"

# Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 2 px or 1 ppt
        bindsym k resize grow height 2 px or 1 ppt
        bindsym j resize shrink height 2 px or 1 ppt
        bindsym l resize grow width 2 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
# }}}

# WORKSPACE CONFIG {{{
# set names for default workspaces
set $ws1 " 1 "
set $ws2 " 2 "
set $ws3 " 3 "
set $ws4 " 4 "
set $ws5 " 5 "
set $ws6 " 6 "
set $ws7 " 7 "
set $ws8 " 8 "
set $ws9 " 9 "
set $ws10 " 10 "

# Window customization
font pango:Ubuntu Bold 0
for_window [class="^.*"] border pixel 3
for_window [class=".*" tiling] border pixel 3

# Allocate applications to workspaces
for_window [class="firefox"] move to workspace $ws2
for_window [class="Code"] move to workspace $ws3
for_window [class="mpv"] move to workspace $ws3
for_window [class="Spotify"] move to workspace $ws4
for_window [class="TelegramDesktop"] move to workspace $ws5 focus
for_window [class="discord"] move to workspace $ws5 focus
for_window [class="Pcmanfm"] move to workspace $ws9 focus
#}}}

# COLOR CONFIG {{{

# Color shemes for windows 
set $bgcolor	#00ABDAAA
set $indicator	#00ACFA80
set $in-bgcolor #6464645D
set $u-bgcolor	#00000000
set $text		#AAFFFFFF
set $in-text	#646464FF

set $bar-color	  #000000CC
set $bar-focused  #000000CC
set $inactive-bar #000000CC
set $text-bar	  #FFFFFFFF
set $in-text-bar  #0099DDFF
set $u-text-bar	  #FF5500FF

#						border		background	text		indicator (a line which shows where the next window will be placed)	
client.focused			$bgcolor	$bgcolor	$text		$indicator
client.unfocused    	$in-bgcolor	$in-bgcolor	$in-text	$in-bgcolor
client.focused_inactive	$in-bgcolor	$in-bgcolor	$in-text	$in-bgcolor
client.urgent			$u-bgcolor	$u-bgcolor	$u-text-bar	$u-bgcolor	
# }}}

# I3 BAR CONFIG {{{

# Start i3bar to display a workspace bar 
bar {
		status_command SCRIPT_DIR=~/Scripts i3blocks -c /home/$USER/.config/i3/i3blocks.conf
		font pango: JetBrains Bold 8
		position top
		strip_workspace_numbers yes
		i3bar_command i3bar --transparency 
		separator_symbol " "
		tray_output none

		colors {
		background $bar-color
		separator #00000000
		#					border			background			text
		focused_workspace	$bar-focused	$bar-focused		$text-bar
		inactive_workspace	$inactive-bar	$inactive-bar		$in-text-bar
		urgent_workspace	$u-bgcolor		$u-bgcolor			$u-text-bar
		}
}
# }}}

# GAPS CONFIG {{{
# default gaps
gaps inner 8
gaps outer 5

# gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
#}}}
