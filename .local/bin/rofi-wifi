#!/usr/bin/bash

ICON_WIFI="$HOME/.local/share/icons/dunst/wifi.png"
ICON_CAUTION="$HOME/.local/share/icons/dunst/caution.png"
SOUND_NOTIFY="$HOME/.local/bin/notify-sound"
SOUND_ERROR="$HOME/.local/bin/notify-sound --error"
TIME_DURATION=4000

# Get currently connected SSID
current_connection=$(nmcli -t -f active,ssid dev wifi | awk -F: '/^yes:/ {print $2}')

# Get a list of available wifi connections
wifi_list=$(nmcli --fields "SECURITY,SSID" device wifi list | sed 1d | sed 's/  */ /g' | sed -E "s/WPA*.?\S/ /g" | sed "s/^--/ /g" | sed "s/  //g" | sed "/--/d" | while read -r line; do
    ssid="${line#* }"
    if [ "$ssid" = "$current_connection" ]; then
        echo "  $ssid"
    else
        echo "  $ssid"
    fi
done)

# Check WiFi status for toggle option
connected=$(nmcli -fields WIFI g)
if [[ "$connected" =~ "enabled" ]]; then
    toggle="󰖪  Disable Wi-Fi"
elif [[ "$connected" =~ "disabled" ]]; then
    toggle="󰖩  Enable Wi-Fi"
fi

# Use rofi to select wifi network
chosen_network=$(echo -e "$toggle\n$wifi_list" | uniq -u | rofi -dmenu -i -selected-row 0 -p "Wi-Fi SSID: " -config ~/.config/rofi/presets/wifi.rasi)

# Get name of connection - handling both icon cases
if [[ "$chosen_network" == "󰖩  Enable Wi-Fi" ]] || [[ "$chosen_network" == "󰖪  Disable Wi-Fi" ]]; then
    chosen_id="$chosen_network"
else
    # Remove the first 3 characters (1 symbol + 2 spaces)
    chosen_id="${chosen_network:3}"
fi

if [ "$chosen_network" = "" ]; then
    exit
elif [ "$chosen_network" = "󰖩  Enable Wi-Fi" ]; then
    nmcli radio wifi on
elif [ "$chosen_network" = "󰖪  Disable Wi-Fi" ]; then
    nmcli radio wifi off
else
    success_message="You are now connected to the Wi-Fi network \"$chosen_id\"."
    
    # Get saved connections
    saved_connections=$(nmcli -g NAME connection)
    if [[ $(echo "$saved_connections" | grep -w "$chosen_id") = "$chosen_id" ]]; then
        if nmcli connection up id "$chosen_id"; then
            dunstify -t $TIME_DURATION -u low -i "$ICON_WIFI" "$success_message"
            $SOUND_NOTIFY
        else
            dunstify -u low -i "$ICON_CAUTION" "Failed to connect to $chosen_id"
            $SOUND_ERROR
        fi
    else
        if [[ "$chosen_network" =~ "" ]]; then
            # Use password prompt with hidden input
            wifi_password=$(rofi -dmenu -p "Password: " -password)
            
            # Rescan available networks before attempting connection
            nmcli device wifi rescan
            sleep 1  # Give time for the scan to complete
            
            # Attempt connection with error handling
            if nmcli device wifi connect "$chosen_id" password "$wifi_password"; then
                dunstify -t $TIME_DURATION -u low -i "$ICON_WIFI" "$success_message"
                $SOUND_NOTIFY
            else
                dunstify -u low -i "$ICON_CAUTION" "Failed to connect to $chosen_id. Please check your password."
                $SOUND_ERROR
            fi
        fi
    fi
fi
