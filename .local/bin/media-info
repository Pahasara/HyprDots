#!/bin/bash

## This script allows getting currently playing track information

## Features:
## - Trims track information to a specified maximum length
## - Supports optional max_length argument for customizing display length
## - Configurable players list for easy customization

## Requirements:
## - `playerctl`: For retrieving media player track information

## Author: Pahasara Dewnith (https://github.com/Pahasara)

default_max_length=32
PLAYERS=("spotify" "Lollypop")

trim_info() {
    local info="$1"
    local max_length="$2"
    
    if [ ${#info} -gt $max_length ]; then
        local trim_length=$((max_length - 1))
        local trimmed="${info:0:$trim_length}"
        
        trimmed=$(echo "$trimmed" | sed 's/ ✦ *$//; s/✦ *$//')
        
        info="${trimmed}…"
    fi
    echo "$info"
}

if [[ $1 =~ max_length=([0-9]+) ]]; then
    max_length="${BASH_REMATCH[1]}"
else
    max_length=$default_max_length
fi

# Check preferred players in order
for player in "${PLAYERS[@]}"; do
    if playerctl --player="$player" status 2>/dev/null | grep -q "Playing"; then
        info=$(playerctl metadata --player="$player" --format '{{title}} ✦ {{artist}}')
        trimmed_info=$(trim_info "$info" "$max_length")
        output=" $trimmed_info"
        break
    fi
done

# If no preferred players are playing, check any player
if [ -z "$output" ]; then
    music_status=$(playerctl status 2>/dev/null)
    if [ "$music_status" == "Playing" ]; then
        info=$(playerctl metadata --format '{{title}} ✦ {{artist}}')
        trimmed_info=$(trim_info "$info" "$max_length")
        output=" $trimmed_info"
    fi
fi

echo "$output"
