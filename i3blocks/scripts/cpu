#!/usr/bin/env python3
import argparse
import os
import psutil

def create_argparse():
    def _default(name, default='', arg_type=str):
        val = default
        if name in os.environ:
            val = os.environ[name]
        return arg_type(val)

    parser = argparse.ArgumentParser(description='Check CPU usage')
    parser.add_argument(
        '-c',
        '--cpu_warning_threshold',
        default=_default('CPU_WARNING_THRESHOLD', '80'),
        type=int,
        help='CPU usage percentage threshold for warning (default=80)'
    )
    parser.add_argument(
        '-b',
        '--base_color',
        default=_default('BASE_COLOR', 'green'),
        help='Base color of the output (default=green)'
    )
    parser.add_argument(
        '-w',
        '--warning_color',
        default=_default('WARNING_COLOR', 'red'),
        help='Color of the output when CPU usage exceeds warning threshold (default=red)'
    )
    return parser.parse_args()

def get_cpu_usage():
    return psutil.cpu_percent(interval=1)

def format_output(cpu_usage, warning_threshold):
    if cpu_usage >= warning_threshold:
        return f'CPU: {cpu_usage}%'
    else:
        return f'CPU: {cpu_usage}%'

args = create_argparse()
cpu_usage = get_cpu_usage()
output = format_output(cpu_usage, args.cpu_warning_threshold)

if cpu_usage >= args.cpu_warning_threshold:
    print(f'<span color="{args.warning_color}">{output}</span>')
else:
    print(f'{output}')

